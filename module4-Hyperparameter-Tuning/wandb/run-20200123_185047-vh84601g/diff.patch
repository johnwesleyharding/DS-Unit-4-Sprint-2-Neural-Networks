diff --git a/module3-Intro-to-Keras/jwh2_423_Keras_Assignment.ipynb b/module3-Intro-to-Keras/jwh2_423_Keras_Assignment.ipynb
index 2254c8c..f20f1fd 100644
--- a/module3-Intro-to-Keras/jwh2_423_Keras_Assignment.ipynb
+++ b/module3-Intro-to-Keras/jwh2_423_Keras_Assignment.ipynb
@@ -102,7 +102,7 @@
      "output_type": "stream",
      "text": [
       "WARNING: Logging before flag parsing goes to stderr.\n",
-      "W0122 23:58:27.733799  5868 deprecation.py:506] From C:\\Users\\John\\Anaconda3\\envs\\U4-S2-NN\\lib\\site-packages\\tensorflow\\python\\ops\\init_ops.py:1251: calling VarianceScaling.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.\n",
+      "W0123 10:16:13.622308  4120 deprecation.py:506] From C:\\Users\\John\\Anaconda3\\envs\\U4-S2-NN\\lib\\site-packages\\tensorflow\\python\\ops\\init_ops.py:1251: calling VarianceScaling.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.\n",
       "Instructions for updating:\n",
       "Call initializer instance with the dtype argument instead of passing it to the constructor\n"
      ]
@@ -148,7 +148,7 @@
     "mnist_model.add(Dense(64, activation='relu'))\n",
     "mnist_model.add(Dropout(0.2))\n",
     "mnist_model.add(Dense(32, activation='relu'))\n",
-    "mnist_model.add(Dense(10,activation='softmax'))\n",
+    "mnist_model.add(Dense(10, activation='softmax'))\n",
     "\n",
     "mnist_model.compile(loss='categorical_crossentropy',\n",
     "                    optimizer='adam',\n",
@@ -166,17 +166,34 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "10000/10000 [==============================] - 0s 25us/sample - loss: 0.4234 - acc: 0.8719\n",
-      "acc: 87.19000220298767\n"
+      "10000/10000 [==============================] - 0s 21us/sample - loss: 0.4251 - acc: 0.8482\n",
+      "acc: 84.82000231742859\n"
      ]
     }
    ],
    "source": [
-    "history = mnist_model.fit(X_train, y_train, batch_size=32, epochs=100, verbose=False)\n",
+    "history = mnist_model.fit(X_train, y_train, batch_size=batch_size, epochs=epochs, verbose=False, validation_data=(X_test, y_test))\n",
     "scores = mnist_model.evaluate(X_test, y_test)\n",
     "print(f'{mnist_model.metrics_names[1]}: {scores[1]*100}')"
    ]
   },
+  {
+   "cell_type": "code",
+   "execution_count": 11,
+   "metadata": {},
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "acc: 84.82000231742859\n"
+     ]
+    }
+   ],
+   "source": [
+    "print(f'{mnist_model.metrics_names[1]}: {scores[1]*100}')"
+   ]
+  },
   {
    "cell_type": "code",
    "execution_count": 8,
@@ -184,7 +201,7 @@
    "outputs": [
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 1 Axes>"
       ]
@@ -198,7 +215,7 @@
    "source": [
     "# Plot training & validation loss values\n",
     "plt.plot(history.history['loss'])\n",
-    "# plt.plot(history.history['val_loss'])\n",
+    "plt.plot(history.history['val_loss'])\n",
     "plt.title('Model loss')\n",
     "plt.ylabel('Loss')\n",
     "plt.xlabel('Epoch')\n",
diff --git a/module3-Intro-to-Keras/jwh_423_Keras_Assignment.ipynb b/module3-Intro-to-Keras/jwh_423_Keras_Assignment.ipynb
index 79a5589..d6de60d 100644
--- a/module3-Intro-to-Keras/jwh_423_Keras_Assignment.ipynb
+++ b/module3-Intro-to-Keras/jwh_423_Keras_Assignment.ipynb
@@ -128,7 +128,7 @@
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
-       "      <th>0</th>\n",
+       "      <td>0</td>\n",
        "      <td>1.23247</td>\n",
        "      <td>0.0</td>\n",
        "      <td>8.14</td>\n",
@@ -144,7 +144,7 @@
        "      <td>18.72</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>1</th>\n",
+       "      <td>1</td>\n",
        "      <td>0.02177</td>\n",
        "      <td>82.5</td>\n",
        "      <td>2.03</td>\n",
@@ -160,7 +160,7 @@
        "      <td>3.11</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>2</th>\n",
+       "      <td>2</td>\n",
        "      <td>4.89822</td>\n",
        "      <td>0.0</td>\n",
        "      <td>18.10</td>\n",
@@ -176,7 +176,7 @@
        "      <td>3.26</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>3</th>\n",
+       "      <td>3</td>\n",
        "      <td>0.03961</td>\n",
        "      <td>0.0</td>\n",
        "      <td>5.19</td>\n",
@@ -192,7 +192,7 @@
        "      <td>8.01</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>4</th>\n",
+       "      <td>4</td>\n",
        "      <td>3.69311</td>\n",
        "      <td>0.0</td>\n",
        "      <td>18.10</td>\n",
@@ -275,7 +275,7 @@
        "  </thead>\n",
        "  <tbody>\n",
        "    <tr>\n",
-       "      <th>A</th>\n",
+       "      <td>A</td>\n",
        "      <td>404.0</td>\n",
        "      <td>3.745111</td>\n",
        "      <td>9.240734</td>\n",
@@ -286,7 +286,7 @@
        "      <td>88.9762</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>B</th>\n",
+       "      <td>B</td>\n",
        "      <td>404.0</td>\n",
        "      <td>11.480198</td>\n",
        "      <td>23.767711</td>\n",
@@ -297,7 +297,7 @@
        "      <td>100.0000</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>C</th>\n",
+       "      <td>C</td>\n",
        "      <td>404.0</td>\n",
        "      <td>11.104431</td>\n",
        "      <td>6.811308</td>\n",
@@ -308,7 +308,7 @@
        "      <td>27.7400</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>D</th>\n",
+       "      <td>D</td>\n",
        "      <td>404.0</td>\n",
        "      <td>0.061881</td>\n",
        "      <td>0.241238</td>\n",
@@ -319,7 +319,7 @@
        "      <td>1.0000</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>E</th>\n",
+       "      <td>E</td>\n",
        "      <td>404.0</td>\n",
        "      <td>0.557356</td>\n",
        "      <td>0.117293</td>\n",
@@ -330,7 +330,7 @@
        "      <td>0.8710</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>F</th>\n",
+       "      <td>F</td>\n",
        "      <td>404.0</td>\n",
        "      <td>6.267082</td>\n",
        "      <td>0.709788</td>\n",
@@ -341,7 +341,7 @@
        "      <td>8.7250</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>G</th>\n",
+       "      <td>G</td>\n",
        "      <td>404.0</td>\n",
        "      <td>69.010644</td>\n",
        "      <td>27.940665</td>\n",
@@ -352,7 +352,7 @@
        "      <td>100.0000</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>H</th>\n",
+       "      <td>H</td>\n",
        "      <td>404.0</td>\n",
        "      <td>3.740271</td>\n",
        "      <td>2.030215</td>\n",
@@ -363,7 +363,7 @@
        "      <td>10.7103</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>I</th>\n",
+       "      <td>I</td>\n",
        "      <td>404.0</td>\n",
        "      <td>9.440594</td>\n",
        "      <td>8.698360</td>\n",
@@ -374,7 +374,7 @@
        "      <td>24.0000</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>J</th>\n",
+       "      <td>J</td>\n",
        "      <td>404.0</td>\n",
        "      <td>405.898515</td>\n",
        "      <td>166.374543</td>\n",
@@ -385,7 +385,7 @@
        "      <td>711.0000</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>K</th>\n",
+       "      <td>K</td>\n",
        "      <td>404.0</td>\n",
        "      <td>18.475990</td>\n",
        "      <td>2.200382</td>\n",
@@ -396,7 +396,7 @@
        "      <td>22.0000</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>L</th>\n",
+       "      <td>L</td>\n",
        "      <td>404.0</td>\n",
        "      <td>354.783168</td>\n",
        "      <td>94.111148</td>\n",
@@ -407,7 +407,7 @@
        "      <td>396.9000</td>\n",
        "    </tr>\n",
        "    <tr>\n",
-       "      <th>M</th>\n",
+       "      <td>M</td>\n",
        "      <td>404.0</td>\n",
        "      <td>12.740817</td>\n",
        "      <td>7.254545</td>\n",
@@ -649,20 +649,10 @@
    "execution_count": 16,
    "metadata": {},
    "outputs": [
-    {
-     "name": "stderr",
-     "output_type": "stream",
-     "text": [
-      "WARNING: Logging before flag parsing goes to stderr.\n",
-      "W0123 00:02:38.879484 12964 deprecation.py:506] From C:\\Users\\John\\Anaconda3\\envs\\U4-S2-NN\\lib\\site-packages\\tensorflow\\python\\ops\\init_ops.py:1251: calling VarianceScaling.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.\n",
-      "Instructions for updating:\n",
-      "Call initializer instance with the dtype argument instead of passing it to the constructor\n"
-     ]
-    },
     {
      "data": {
       "text/plain": [
-       "<bound method Network.summary of <tensorflow.python.keras.engine.sequential.Sequential object at 0x0000020191E99FD0>>"
+       "<bound method Network.summary of <tensorflow.python.keras.engine.sequential.Sequential object at 0x000002078582FE08>>"
       ]
      },
      "execution_count": 16,
@@ -706,13 +696,13 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "404/404 [==============================] - 0s 213us/sample - loss: 85.5746 - mean_absolute_error: 6.5310 - mean_squared_error: 85.5746\n"
s 302us/sample - loss: 65.5995 - mae: 6.6245 - mse: 84.6396\n"
      ]
     },
     {
      "data": {
       "text/plain": [
-       "[85.57459852010896, 6.53103, 85.57459]"
+       "[84.6396300438607, 6.624471, 84.63962]"
       ]
      },
      "execution_count": 18,
@@ -726,39 +716,29 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 19,
+   "execution_count": 22,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "102/102 [==============================] - 0s 69us/sample - loss: 85.9970 - mean_absolute_error: 6.5448 - mean_squared_error: 85.9970\n"
s 274us/sample - loss: 124.3481 - mae: 6.5253 - mse: 83.9087\n"
      ]
-    },
-    {
-     "data": {
-      "text/plain": [
-       "[85.99702812643612, 6.5448046, 85.997025]"
-      ]
-     },
-     "execution_count": 19,
-     "metadata": {},
-     "output_type": "execute_result"
     }
    ],
    "source": [
-    "bh_model.evaluate(X_test, y_test)"
+    "testh = bh_model.evaluate(X_test, y_test)"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 20,
+   "execution_count": 24,
    "metadata": {},
    "outputs": [
     {
      "data": {
-      "image/png": "\n",
+      "image/png": "\n",
       "text/plain": [
        "<Figure size 432x288 with 1 Axes>"
       ]
@@ -781,6 +761,7 @@
     "\n",
     "# Plot training & validation loss values\n",
     "plt.plot(history.history['loss'])\n",
+    "# plt.plot(testh.history['loss'])\n",
     "# plt.plot(history.history['val_loss'])\n",
     "plt.title('Model loss')\n",
     "plt.ylabel('Loss')\n",
@@ -791,10 +772,37 @@
   },
   {
    "cell_type": "code",
-   "execution_count": null,
+   "execution_count": 21,
    "metadata": {},
-   "outputs": [],
-   "source": []
+   "outputs": [
+    {
+     "name": "stdout",
+     "output_type": "stream",
+     "text": [
+      "[name: \"/device:CPU:0\"\n",
+      "device_type: \"CPU\"\n",
+      "memory_limit: 268435456\n",
+      "locality {\n",
+      "}\n",
+      "incarnation: 13501092367384797857\n",
+      ", name: \"/device:GPU:0\"\n",
+      "device_type: \"GPU\"\n",
+      "memory_limit: 3200348979\n",
+      "locality {\n",
+      "  bus_id: 1\n",
+      "  links {\n",
+      "  }\n",
+      "}\n",
+      "incarnation: 5228380565500564263\n",
+      "physical_device_desc: \"device: 0, name: GeForce GTX 770, pci bus id: 0000:01:00.0, compute capability: 3.0\"\n",
+      "]\n"
+     ]
+    }
+   ],
+   "source": [
+    "from tensorflow.python.client import device_lib\n",
+    "print(device_lib.list_local_devices())"
+   ]
   },
   {
    "cell_type": "markdown",
@@ -810,6 +818,13 @@
     "- Use GridSearchCV to try different combinations of hyperparameters. \n",
     "- Start looking into other types of Keras layers for CNNs and RNNs maybe try and build a CNN model for fashion-MNIST to see how the results compare."
    ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
+   "source": []
   }
  ],
  "metadata": {
@@ -819,9 +834,9 @@
    "version": "0.3.2"
   },
   "kernelspec": {
-   "display_name": "U4-S2-NN (Python3)",
+   "display_name": "Python 3",
    "language": "python",
-   "name": "u4-s2-nn"
+   "name": "python3"
   },
   "language_info": {
    "codemirror_mode": {
@@ -833,7 +848,7 @@
    "name": "python",
    "nbconvert_exporter": "python",
    "pygments_lexer": "ipython3",
-   "version": "3.7.0"
+   "version": "3.7.4"
   }
  },
  "nbformat": 4,
diff --git a/module4-Hyperparameter-Tuning/LS_DS_424_Hyperparameter_Tuning_Lecture.ipynb b/module4-Hyperparameter-Tuning/LS_DS_424_Hyperparameter_Tuning_Lecture.ipynb
index 4bb18e9..d605bca 100644
--- a/module4-Hyperparameter-Tuning/LS_DS_424_Hyperparameter_Tuning_Lecture.ipynb
+++ b/module4-Hyperparameter-Tuning/LS_DS_424_Hyperparameter_Tuning_Lecture.ipynb
@@ -81,10 +81,13 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 1,
+   "execution_count": 2,
    "metadata": {},
    "outputs": [],
    "source": [
+    "import warnings\n",
+    "warnings.filterwarnings('ignore')\n",
+    "\n",
     "from tensorflow.keras.datasets import boston_housing\n",
     "\n",
     "(x_train, y_train), (x_test, y_test) = boston_housing.load_data()"
@@ -106,7 +109,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 2,
+   "execution_count": 3,
    "metadata": {},
    "outputs": [
     {
@@ -170,7 +173,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 3,
+   "execution_count": 4,
    "metadata": {
     "colab": {
      "base_uri": "https://localhost:8080/",
@@ -181,170 +184,180 @@
     "outputId": "b05e251e-508f-46e6-865b-f869ae2a5dc4"
    },
    "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "WARNING: Logging before flag parsing goes to stderr.\n",
+      "W0123 12:23:01.590157  2304 deprecation.py:506] From C:\\Users\\John\\Anaconda3\\envs\\U4-S2-NN\\lib\\site-packages\\tensorflow\\python\\ops\\init_ops.py:1251: calling VarianceScaling.__init__ (from tensorflow.python.ops.init_ops) with dtype is deprecated and will be removed in a future version.\n",
+      "Instructions for updating:\n",
+      "Call initializer instance with the dtype argument instead of passing it to the constructor\n"
+     ]
+    },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
       "Train on 404 samples, validate on 102 samples\n",
       "Epoch 1/75\n",
-      "404/404 [==============================] - 2s 4ms/sample - loss: 498.2045 - mse: 498.2046 - mae: 20.2543 - val_loss: 421.5039 - val_mse: 421.5038 - val_mae: 18.3349\n",
+      "404/404 [==============================] - 0s 346us/sample - loss: 523.5956 - mean_squared_error: 523.5956 - mean_absolute_error: 20.8978 - val_loss: 450.7240 - val_mean_squared_error: 450.7240 - val_mean_absolute_error: 19.1575\n",
       "Epoch 2/75\n",
-      "404/404 [==============================] - 0s 347us/sample - loss: 249.6985 - mse: 249.6985 - mae: 13.2672 - val_loss: 111.3743 - val_mse: 111.3743 - val_mae: 8.6210\n",
+      "404/404 [==============================] - 0s 106us/sample - loss: 306.1010 - mean_squared_error: 306.1010 - mean_absolute_error: 15.1063 - val_loss: 162.4555 - val_mean_squared_error: 162.4556 - val_mean_absolute_error: 10.7337\n",
       "Epoch 3/75\n",
-      "404/404 [==============================] - 0s 344us/sample - loss: 56.6755 - mse: 56.6755 - mae: 5.4817 - val_loss: 39.1997 - val_mse: 39.1997 - val_mae: 4.9872\n",
+      "404/404 [==============================] - 0s 99us/sample - loss: 92.5113 - mean_squared_error: 92.5112 - mean_absolute_error: 7.5047 - val_loss: 56.8381 - val_mean_squared_error: 56.8381 - val_mean_absolute_error: 6.0650\n",
       "Epoch 4/75\n",
-      "404/404 [==============================] - 0s 364us/sample - loss: 28.3243 - mse: 28.3243 - mae: 3.7054 - val_loss: 26.9866 - val_mse: 26.9866 - val_mae: 4.0796\n",
+      "404/404 [==============================] - 0s 99us/sample - loss: 39.9487 - mean_squared_error: 39.9487 - mean_absolute_error: 4.6949 - val_loss: 34.8338 - val_mean_squared_error: 34.8338 - val_mean_absolute_error: 4.7281\n",
       "Epoch 5/75\n",
-      "404/404 [==============================] - 0s 382us/sample - loss: 20.5281 - mse: 20.5281 - mae: 3.1209 - val_loss: 24.6172 - val_mse: 24.6172 - val_mae: 3.8052\n",
+      "404/404 [==============================] - 0s 106us/sample - loss: 26.3152 - mean_squared_error: 26.3152 - mean_absolute_error: 3.7509 - val_loss: 27.8557 - val_mean_squared_error: 27.8557 - val_mean_absolute_error: 4.0436\n",
       "Epoch 6/75\n",
-      "404/404 [==============================] - 0s 393us/sample - loss: 17.9283 - mse: 17.9283 - mae: 2.8665 - val_loss: 23.6524 - val_mse: 23.6524 - val_mae: 3.6746\n",
+      "404/404 [==============================] - 0s 101us/sample - loss: 22.0190 - mean_squared_error: 22.0190 - mean_absolute_error: 3.3326 - val_loss: 25.9182 - val_mean_squared_error: 25.9181 - val_mean_absolute_error: 3.8632\n",
       "Epoch 7/75\n",
-      "404/404 [==============================] - 0s 440us/sample - loss: 16.9179 - mse: 16.9179 - mae: 2.8781 - val_loss: 23.4620 - val_mse: 23.4620 - val_mae: 3.5778\n",
+      "404/404 [==============================] - 0s 104us/sample - loss: 19.7307 - mean_squared_error: 19.7307 - mean_absolute_error: 3.1362 - val_loss: 24.3977 - val_mean_squared_error: 24.3977 - val_mean_absolute_error: 3.6835\n",
       "Epoch 8/75\n",
-      "404/404 [==============================] - 0s 366us/sample - loss: 15.1579 - mse: 15.1579 - mae: 2.6440 - val_loss: 24.1374 - val_mse: 24.1374 - val_mae: 3.5929\n",
+      "404/404 [==============================] - 0s 106us/sample - loss: 18.1106 - mean_squared_error: 18.1106 - mean_absolute_error: 2.9808 - val_loss: 24.4071 - val_mean_squared_error: 24.4071 - val_mean_absolute_error: 3.6115\n",
       "Epoch 9/75\n",
-      "404/404 [==============================] - 0s 367us/sample - loss: 14.1717 - mse: 14.1717 - mae: 2.5937 - val_loss: 24.4829 - val_mse: 24.4829 - val_mae: 3.5639\n",
+      "404/404 [==============================] - 0s 97us/sample - loss: 16.6635 - mean_squared_error: 16.6635 - mean_absolute_error: 2.8530 - val_loss: 23.5841 - val_mean_squared_error: 23.5841 - val_mean_absolute_error: 3.5014\n",
       "Epoch 10/75\n",
-      "404/404 [==============================] - 0s 359us/sample - loss: 13.5002 - mse: 13.5002 - mae: 2.5633 - val_loss: 25.0170 - val_mse: 25.0170 - val_mae: 3.5601\n",
+      "404/404 [==============================] - 0s 97us/sample - loss: 15.4298 - mean_squared_error: 15.4298 - mean_absolute_error: 2.7397 - val_loss: 23.3980 - val_mean_squared_error: 23.3980 - val_mean_absolute_error: 3.4536\n",
       "Epoch 11/75\n",
-      "404/404 [==============================] - 0s 363us/sample - loss: 12.8641 - mse: 12.8641 - mae: 2.4963 - val_loss: 25.1162 - val_mse: 25.1162 - val_mae: 3.5449\n",
+      "404/404 [==============================] - 0s 94us/sample - loss: 14.3957 - mean_squared_error: 14.3957 - mean_absolute_error: 2.6818 - val_loss: 25.4805 - val_mean_squared_error: 25.4805 - val_mean_absolute_error: 3.5427\n",
       "Epoch 12/75\n",
-      "404/404 [==============================] - 0s 351us/sample - loss: 12.4033 - mse: 12.4033 - mae: 2.5224 - val_loss: 25.0382 - val_mse: 25.0382 - val_mae: 3.4858\n",
+      "404/404 [==============================] - 0s 97us/sample - loss: 13.5726 - mean_squared_error: 13.5726 - mean_absolute_error: 2.6116 - val_loss: 24.4095 - val_mean_squared_error: 24.4095 - val_mean_absolute_error: 3.4361\n",
       "Epoch 13/75\n",
-      "404/404 [==============================] - 0s 363us/sample - loss: 12.2653 - mse: 12.2653 - mae: 2.4637 - val_loss: 26.7274 - val_mse: 26.7274 - val_mae: 3.6054\n",
+      "404/404 [==============================] - 0s 94us/sample - loss: 12.8918 - mean_squared_error: 12.8918 - mean_absolute_error: 2.5414 - val_loss: 23.7582 - val_mean_squared_error: 23.7582 - val_mean_absolute_error: 3.3652\n",
       "Epoch 14/75\n",
-      "404/404 [==============================] - 0s 368us/sample - loss: 11.8249 - mse: 11.8249 - mae: 2.4648 - val_loss: 25.2347 - val_mse: 25.2347 - val_mae: 3.4602\n",
+      "404/404 [==============================] - 0s 94us/sample - loss: 12.3283 - mean_squared_error: 12.3282 - mean_absolute_error: 2.4859 - val_loss: 24.2968 - val_mean_squared_error: 24.2968 - val_mean_absolute_error: 3.4038\n",
       "Epoch 15/75\n",
-      "404/404 [==============================] - 0s 356us/sample - loss: 11.3965 - mse: 11.3965 - mae: 2.4134 - val_loss: 25.3070 - val_mse: 25.3070 - val_mae: 3.4305\n",
+      "404/404 [==============================] - 0s 104us/sample - loss: 12.0311 - mean_squared_error: 12.0311 - mean_absolute_error: 2.4516 - val_loss: 24.0360 - val_mean_squared_error: 24.0360 - val_mean_absolute_error: 3.3514\n",
       "Epoch 16/75\n",
-      "404/404 [==============================] - 0s 363us/sample - loss: 11.0982 - mse: 11.0982 - mae: 2.3616 - val_loss: 25.0599 - val_mse: 25.0599 - val_mae: 3.3784\n",
+      "404/404 [==============================] - 0s 126us/sample - loss: 11.5216 - mean_squared_error: 11.5216 - mean_absolute_error: 2.4274 - val_loss: 23.8398 - val_mean_squared_error: 23.8398 - val_mean_absolute_error: 3.3103\n",
       "Epoch 17/75\n",
-      "404/404 [==============================] - 0s 365us/sample - loss: 11.1969 - mse: 11.1969 - mae: 2.3806 - val_loss: 25.1976 - val_mse: 25.1976 - val_mae: 3.3732\n",
+      "404/404 [==============================] - 0s 92us/sample - loss: 11.1069 - mean_squared_error: 11.1069 - mean_absolute_error: 2.3722 - val_loss: 23.4023 - val_mean_squared_error: 23.4023 - val_mean_absolute_error: 3.3026\n",
       "Epoch 18/75\n",
-      "404/404 [==============================] - 0s 369us/sample - loss: 10.9278 - mse: 10.9278 - mae: 2.3653 - val_loss: 24.2875 - val_mse: 24.2875 - val_mae: 3.3114\n",
+      "404/404 [==============================] - 0s 87us/sample - loss: 10.8355 - mean_squared_error: 10.8355 - mean_absolute_error: 2.3433 - val_loss: 24.5718 - val_mean_squared_error: 24.5718 - val_mean_absolute_error: 3.3333\n",
       "Epoch 19/75\n",
-      "404/404 [==============================] - 0s 365us/sample - loss: 10.5854 - mse: 10.5854 - mae: 2.3170 - val_loss: 26.1450 - val_mse: 26.1450 - val_mae: 3.3971\n",
+      "404/404 [==============================] - 0s 89us/sample - loss: 10.6401 - mean_squared_error: 10.6401 - mean_absolute_error: 2.3513 - val_loss: 24.0481 - val_mean_squared_error: 24.0481 - val_mean_absolute_error: 3.2944\n",
       "Epoch 20/75\n",
-      "404/404 [==============================] - 0s 401us/sample - loss: 10.2546 - mse: 10.2546 - mae: 2.2813 - val_loss: 26.5278 - val_mse: 26.5278 - val_mae: 3.4465\n",
+      "404/404 [==============================] - 0s 101us/sample - loss: 10.2946 - mean_squared_error: 10.2946 - mean_absolute_error: 2.2924 - val_loss: 23.1958 - val_mean_squared_error: 23.1958 - val_mean_absolute_error: 3.2095\n",
       "Epoch 21/75\n",
-      "404/404 [==============================] - 0s 380us/sample - loss: 10.1321 - mse: 10.1321 - mae: 2.2866 - val_loss: 24.0363 - val_mse: 24.0363 - val_mae: 3.2792\n",
+      "404/404 [==============================] - 0s 92us/sample - loss: 10.1132 - mean_squared_error: 10.1132 - mean_absolute_error: 2.2753 - val_loss: 25.6229 - val_mean_squared_error: 25.6229 - val_mean_absolute_error: 3.2957\n",
       "Epoch 22/75\n",
-      "404/404 [==============================] - 0s 421us/sample - loss: 9.9169 - mse: 9.9169 - mae: 2.2907 - val_loss: 23.7310 - val_mse: 23.7310 - val_mae: 3.2334\n",
+      "404/404 [==============================] - 0s 89us/sample - loss: 10.0353 - mean_squared_error: 10.0353 - mean_absolute_error: 2.3403 - val_loss: 22.0644 - val_mean_squared_error: 22.0644 - val_mean_absolute_error: 3.1155\n",
       "Epoch 23/75\n",
-      "404/404 [==============================] - 0s 361us/sample - loss: 9.6588 - mse: 9.6588 - mae: 2.2284 - val_loss: 23.6472 - val_mse: 23.6472 - val_mae: 3.2013\n",
+      "404/404 [==============================] - 0s 87us/sample - loss: 9.7196 - mean_squared_error: 9.7196 - mean_absolute_error: 2.2237 - val_loss: 24.9294 - val_mean_squared_error: 24.9294 - val_mean_absolute_error: 3.2637\n",
       "Epoch 24/75\n",
-      "404/404 [==============================] - 0s 363us/sample - loss: 9.6887 - mse: 9.6887 - mae: 2.2468 - val_loss: 23.5379 - val_mse: 23.5379 - val_mae: 3.1921\n",
+      "404/404 [==============================] - 0s 84us/sample - loss: 9.6648 - mean_squared_error: 9.6648 - mean_absolute_error: 2.2476 - val_loss: 23.6702 - val_mean_squared_error: 23.6702 - val_mean_absolute_error: 3.2316\n",
       "Epoch 25/75\n",
-      "404/404 [==============================] - 0s 373us/sample - loss: 9.4049 - mse: 9.4049 - mae: 2.1999 - val_loss: 23.7713 - val_mse: 23.7713 - val_mae: 3.2273\n",
+      "404/404 [==============================] - 0s 87us/sample - loss: 9.5148 - mean_squared_error: 9.5148 - mean_absolute_error: 2.2148 - val_loss: 22.7332 - val_mean_squared_error: 22.7332 - val_mean_absolute_error: 3.1395\n",
       "Epoch 26/75\n",
-      "404/404 [==============================] - 0s 359us/sample - loss: 9.2304 - mse: 9.2304 - mae: 2.1946 - val_loss: 23.5093 - val_mse: 23.5093 - val_mae: 3.2072\n",
+      "404/404 [==============================] - 0s 87us/sample - loss: 9.2357 - mean_squared_error: 9.2357 - mean_absolute_error: 2.1934 - val_loss: 22.5190 - val_mean_squared_error: 22.5190 - val_mean_absolute_error: 3.1133\n",
       "Epoch 27/75\n",
-      "404/404 [==============================] - 0s 361us/sample - loss: 9.0493 - mse: 9.0493 - mae: 2.1528 - val_loss: 23.7969 - val_mse: 23.7969 - val_mae: 3.2005\n",
+      "404/404 [==============================] - 0s 89us/sample - loss: 9.2789 - mean_squared_error: 9.2789 - mean_absolute_error: 2.1863 - val_loss: 23.2055 - val_mean_squared_error: 23.2055 - val_mean_absolute_error: 3.1286\n",
       "Epoch 28/75\n",
-      "404/404 [==============================] - 0s 359us/sample - loss: 8.9363 - mse: 8.9363 - mae: 2.1475 - val_loss: 22.1030 - val_mse: 22.1030 - val_mae: 3.0707\n",
+      "404/404 [==============================] - 0s 92us/sample - loss: 9.1559 - mean_squared_error: 9.1559 - mean_absolute_error: 2.1827 - val_loss: 21.3131 - val_mean_squared_error: 21.3131 - val_mean_absolute_error: 3.0133\n",
       "Epoch 29/75\n",
-      "404/404 [==============================] - 0s 373us/sample - loss: 8.7834 - mse: 8.7834 - mae: 2.1231 - val_loss: 22.5153 - val_mse: 22.5153 - val_mae: 3.1532\n",
+      "404/404 [==============================] - 0s 96us/sample - loss: 8.8878 - mean_squared_error: 8.8878 - mean_absolute_error: 2.1344 - val_loss: 22.3774 - val_mean_squared_error: 22.3774 - val_mean_absolute_error: 3.0388\n",
       "Epoch 30/75\n",
-      "404/404 [==============================] - 0s 371us/sample - loss: 8.7925 - mse: 8.7925 - mae: 2.1531 - val_loss: 22.0449 - val_mse: 22.0449 - val_mae: 3.1245\n",
+      "404/404 [==============================] - 0s 97us/sample - loss: 8.7904 - mean_squared_error: 8.7904 - mean_absolute_error: 2.1144 - val_loss: 23.3565 - val_mean_squared_error: 23.3565 - val_mean_absolute_error: 3.1380\n",
       "Epoch 31/75\n",
-      "404/404 [==============================] - 0s 374us/sample - loss: 9.1879 - mse: 9.1879 - mae: 2.2029 - val_loss: 22.1780 - val_mse: 22.1780 - val_mae: 3.0623\n",
+      "404/404 [==============================] - 0s 97us/sample - loss: 8.7071 - mean_squared_error: 8.7071 - mean_absolute_error: 2.1132 - val_loss: 23.0505 - val_mean_squared_error: 23.0505 - val_mean_absolute_error: 3.1019\n",
       "Epoch 32/75\n",
-      "404/404 [==============================] - 0s 361us/sample - loss: 8.7136 - mse: 8.7136 - mae: 2.1164 - val_loss: 21.9815 - val_mse: 21.9815 - val_mae: 3.0969\n",
+      "404/404 [==============================] - 0s 104us/sample - loss: 8.7095 - mean_squared_error: 8.7095 - mean_absolute_error: 2.1248 - val_loss: 21.8488 - val_mean_squared_error: 21.8488 - val_mean_absolute_error: 3.0040\n",
       "Epoch 33/75\n",
-      "404/404 [==============================] - 0s 371us/sample - loss: 8.3018 - mse: 8.3018 - mae: 2.0639 - val_loss: 21.0477 - val_mse: 21.0477 - val_mae: 2.9645\n",
+      "404/404 [==============================] - 0s 87us/sample - loss: 8.4464 - mean_squared_error: 8.4464 - mean_absolute_error: 2.0717 - val_loss: 22.6137 - val_mean_squared_error: 22.6137 - val_mean_absolute_error: 3.0370\n",
       "Epoch 34/75\n",
-      "404/404 [==============================] - 0s 362us/sample - loss: 8.4156 - mse: 8.4156 - mae: 2.0970 - val_loss: 22.6659 - val_mse: 22.6659 - val_mae: 3.1235\n",
+      "404/404 [==============================] - 0s 87us/sample - loss: 8.4600 - mean_squared_error: 8.4600 - mean_absolute_error: 2.1032 - val_loss: 22.1930 - val_mean_squared_error: 22.1930 - val_mean_absolute_error: 3.0329\n",
       "Epoch 35/75\n",
-      "404/404 [==============================] - 0s 350us/sample - loss: 8.2938 - mse: 8.2938 - mae: 2.0567 - val_loss: 20.9574 - val_mse: 20.9574 - val_mae: 2.9746\n",
+      "404/404 [==============================] - 0s 89us/sample - loss: 8.4614 - mean_squared_error: 8.4614 - mean_absolute_error: 2.0693 - val_loss: 21.1822 - val_mean_squared_error: 21.1822 - val_mean_absolute_error: 3.0524\n",
       "Epoch 36/75\n",
-      "404/404 [==============================] - 0s 357us/sample - loss: 8.0515 - mse: 8.0515 - mae: 2.0591 - val_loss: 23.2063 - val_mse: 23.2063 - val_mae: 3.1980\n",
+      "404/404 [==============================] - 0s 99us/sample - loss: 8.1421 - mean_squared_error: 8.1421 - mean_absolute_error: 2.0380 - val_loss: 21.3888 - val_mean_squared_error: 21.3888 - val_mean_absolute_error: 2.9770\n",
       "Epoch 37/75\n",
-      "404/404 [==============================] - 0s 381us/sample - loss: 8.1403 - mse: 8.1403 - mae: 2.0584 - val_loss: 24.5238 - val_mse: 24.5237 - val_mae: 3.3531\n",
+      "404/404 [==============================] - 0s 99us/sample - loss: 8.1118 - mean_squared_error: 8.1118 - mean_absolute_error: 2.0280 - val_loss: 23.0514 - val_mean_squared_error: 23.0514 - val_mean_absolute_error: 3.1456\n",
       "Epoch 38/75\n",
-      "404/404 [==============================] - 0s 356us/sample - loss: 8.0043 - mse: 8.0043 - mae: 2.0776 - val_loss: 22.5424 - val_mse: 22.5424 - val_mae: 3.1494\n",
+      "404/404 [==============================] - 0s 92us/sample - loss: 8.2735 - mean_squared_error: 8.2735 - mean_absolute_error: 2.0604 - val_loss: 22.6100 - val_mean_squared_error: 22.6100 - val_mean_absolute_error: 3.0530\n",
       "Epoch 39/75\n",
-      "404/404 [==============================] - 0s 361us/sample - loss: 8.1182 - mse: 8.1182 - mae: 2.0683 - val_loss: 19.7576 - val_mse: 19.7576 - val_mae: 2.8799\n",
+      "404/404 [==============================] - 0s 89us/sample - loss: 7.8343 - mean_squared_error: 7.8343 - mean_absolute_error: 2.0272 - val_loss: 20.3064 - val_mean_squared_error: 20.3064 - val_mean_absolute_error: 2.9032\n",
       "Epoch 40/75\n",
-      "404/404 [==============================] - 0s 374us/sample - loss: 7.8578 - mse: 7.8578 - mae: 2.0131 - val_loss: 20.7728 - val_mse: 20.7728 - val_mae: 2.9499\n",
+      "404/404 [==============================] - 0s 92us/sample - loss: 7.7022 - mean_squared_error: 7.7022 - mean_absolute_error: 1.9843 - val_loss: 21.3519 - val_mean_squared_error: 21.3519 - val_mean_absolute_error: 3.0183\n",
       "Epoch 41/75\n",
-      "404/404 [==============================] - 0s 382us/sample - loss: 7.5711 - mse: 7.5711 - mae: 1.9896 - val_loss: 20.6170 - val_mse: 20.6170 - val_mae: 2.9936\n",
+      "404/404 [==============================] - 0s 94us/sample - loss: 7.6788 - mean_squared_error: 7.6788 - mean_absolute_error: 1.9915 - val_loss: 20.0064 - val_mean_squared_error: 20.0064 - val_mean_absolute_error: 2.8712\n",
       "Epoch 42/75\n",
-      "404/404 [==============================] - 0s 385us/sample - loss: 7.5822 - mse: 7.5822 - mae: 1.9683 - val_loss: 20.8541 - val_mse: 20.8541 - val_mae: 3.0054\n",
+      "404/404 [==============================] - 0s 97us/sample - loss: 7.6232 - mean_squared_error: 7.6232 - mean_absolute_error: 1.9832 - val_loss: 21.0128 - val_mean_squared_error: 21.0128 - val_mean_absolute_error: 3.0730\n",
       "Epoch 43/75\n",
-      "404/404 [==============================] - 0s 408us/sample - loss: 7.4533 - mse: 7.4533 - mae: 1.9645 - val_loss: 20.4473 - val_mse: 20.4473 - val_mae: 2.8861\n",
+      "404/404 [==============================] - 0s 96us/sample - loss: 7.5395 - mean_squared_error: 7.5395 - mean_absolute_error: 1.9713 - val_loss: 20.4059 - val_mean_squared_error: 20.4059 - val_mean_absolute_error: 2.9000\n",
       "Epoch 44/75\n",
-      "404/404 [==============================] - 0s 396us/sample - loss: 7.5226 - mse: 7.5226 - mae: 1.9509 - val_loss: 20.5193 - val_mse: 20.5193 - val_mae: 2.9619\n",
+      "404/404 [==============================] - 0s 92us/sample - loss: 7.4374 - mean_squared_error: 7.4374 - mean_absolute_error: 1.9593 - val_loss: 20.1228 - val_mean_squared_error: 20.1228 - val_mean_absolute_error: 2.8240\n",
       "Epoch 45/75\n",
-      "404/404 [==============================] - 0s 355us/sample - loss: 7.2819 - mse: 7.2819 - mae: 1.9350 - val_loss: 21.4862 - val_mse: 21.4862 - val_mae: 2.9908\n",
+      "404/404 [==============================] - 0s 104us/sample - loss: 7.4074 - mean_squared_error: 7.4074 - mean_absolute_error: 1.9405 - val_loss: 21.5051 - val_mean_squared_error: 21.5051 - val_mean_absolute_error: 2.9406\n",
       "Epoch 46/75\n",
-      "404/404 [==============================] - 0s 354us/sample - loss: 7.0130 - mse: 7.0130 - mae: 1.9152 - val_loss: 20.1577 - val_mse: 20.1577 - val_mae: 2.9370\n",
+      "404/404 [==============================] - 0s 104us/sample - loss: 7.3674 - mean_squared_error: 7.3674 - mean_absolute_error: 1.9615 - val_loss: 19.5877 - val_mean_squared_error: 19.5877 - val_mean_absolute_error: 2.8646\n",
       "Epoch 47/75\n",
-      "404/404 [==============================] - 0s 375us/sample - loss: 6.9431 - mse: 6.9431 - mae: 1.8819 - val_loss: 21.1210 - val_mse: 21.1210 - val_mae: 2.9746\n",
+      "404/404 [==============================] - 0s 101us/sample - loss: 7.1364 - mean_squared_error: 7.1364 - mean_absolute_error: 1.9441 - val_loss: 20.7785 - val_mean_squared_error: 20.7785 - val_mean_absolute_error: 2.8401\n",
       "Epoch 48/75\n",
-      "404/404 [==============================] - 0s 371us/sample - loss: 6.8982 - mse: 6.8982 - mae: 1.9037 - val_loss: 19.2999 - val_mse: 19.2999 - val_mae: 2.8638\n",
+      "404/404 [==============================] - 0s 97us/sample - loss: 7.2707 - mean_squared_error: 7.2707 - mean_absolute_error: 1.9508 - val_loss: 20.1531 - val_mean_squared_error: 20.1531 - val_mean_absolute_error: 2.8235\n",
       "Epoch 49/75\n",
-      "404/404 [==============================] - 0s 368us/sample - loss: 6.9521 - mse: 6.9521 - mae: 1.8862 - val_loss: 20.7825 - val_mse: 20.7825 - val_mae: 2.9369\n",
+      "404/404 [==============================] - 0s 96us/sample - loss: 7.0901 - mean_squared_error: 7.0901 - mean_absolute_error: 1.9358 - val_loss: 19.4669 - val_mean_squared_error: 19.4669 - val_mean_absolute_error: 2.7556\n",
       "Epoch 50/75\n",
-      "404/404 [==============================] - 0s 356us/sample - loss: 6.8718 - mse: 6.8718 - mae: 1.8889 - val_loss: 20.0288 - val_mse: 20.0288 - val_mae: 2.8915\n",
+      "404/404 [==============================] - 0s 92us/sample - loss: 6.8698 - mean_squared_error: 6.8698 - mean_absolute_error: 1.8727 - val_loss: 19.4513 - val_mean_squared_error: 19.4513 - val_mean_absolute_error: 2.8056\n",
       "Epoch 51/75\n",
-      "404/404 [==============================] - 0s 354us/sample - loss: 6.7111 - mse: 6.7111 - mae: 1.8702 - val_loss: 20.4913 - val_mse: 20.4913 - val_mae: 3.0116\n",
+      "404/404 [==============================] - 0s 101us/sample - loss: 6.9163 - mean_squared_error: 6.9163 - mean_absolute_error: 1.9109 - val_loss: 19.2000 - val_mean_squared_error: 19.2000 - val_mean_absolute_error: 2.7560\n",
       "Epoch 52/75\n",
-      "404/404 [==============================] - 0s 361us/sample - loss: 6.7492 - mse: 6.7492 - mae: 1.8482 - val_loss: 18.3008 - val_mse: 18.3008 - val_mae: 2.7362\n",
+      "404/404 [==============================] - 0s 99us/sample - loss: 6.7764 - mean_squared_error: 6.7764 - mean_absolute_error: 1.9029 - val_loss: 19.1167 - val_mean_squared_error: 19.1167 - val_mean_absolute_error: 2.9307\n",
       "Epoch 53/75\n",
-      "404/404 [==============================] - 0s 356us/sample - loss: 6.6262 - mse: 6.6262 - mae: 1.8395 - val_loss: 18.1885 - val_mse: 18.1885 - val_mae: 2.6920\n",
+      "404/404 [==============================] - 0s 92us/sample - loss: 6.9492 - mean_squared_error: 6.9492 - mean_absolute_error: 1.9066 - val_loss: 19.3670 - val_mean_squared_error: 19.3670 - val_mean_absolute_error: 2.7765\n",
       "Epoch 54/75\n",
-      "404/404 [==============================] - 0s 369us/sample - loss: 6.7148 - mse: 6.7148 - mae: 1.8611 - val_loss: 18.5764 - val_mse: 18.5764 - val_mae: 2.6977\n",
+      "404/404 [==============================] - 0s 87us/sample - loss: 6.7510 - mean_squared_error: 6.7510 - mean_absolute_error: 1.8949 - val_loss: 18.8967 - val_mean_squared_error: 18.8967 - val_mean_absolute_error: 2.8187\n",
       "Epoch 55/75\n",
-      "404/404 [==============================] - 0s 358us/sample - loss: 6.5425 - mse: 6.5425 - mae: 1.8522 - val_loss: 19.5772 - val_mse: 19.5772 - val_mae: 2.8326\n",
+      "404/404 [==============================] - 0s 89us/sample - loss: 6.5621 - mean_squared_error: 6.5621 - mean_absolute_error: 1.8447 - val_loss: 18.6230 - val_mean_squared_error: 18.6230 - val_mean_absolute_error: 2.7227\n",
       "Epoch 56/75\n",
-      "404/404 [==============================] - 0s 423us/sample - loss: 6.3349 - mse: 6.3349 - mae: 1.8175 - val_loss: 19.0932 - val_mse: 19.0932 - val_mae: 2.8260\n",
+      "404/404 [==============================] - 0s 158us/sample - loss: 6.4814 - mean_squared_error: 6.4814 - mean_absolute_error: 1.8490 - val_loss: 19.3467 - val_mean_squared_error: 19.3467 - val_mean_absolute_error: 2.8457\n",
       "Epoch 57/75\n",
-      "404/404 [==============================] - 0s 375us/sample - loss: 6.4253 - mse: 6.4253 - mae: 1.7972 - val_loss: 20.4036 - val_mse: 20.4036 - val_mae: 2.9258\n",
+      "404/404 [==============================] - 0s 94us/sample - loss: 6.4536 - mean_squared_error: 6.4536 - mean_absolute_error: 1.8358 - val_loss: 20.1184 - val_mean_squared_error: 20.1184 - val_mean_absolute_error: 2.8740\n",
       "Epoch 58/75\n",
-      "404/404 [==============================] - 0s 362us/sample - loss: 6.2897 - mse: 6.2897 - mae: 1.7785 - val_loss: 21.2845 - val_mse: 21.2845 - val_mae: 3.0715\n",
+      "404/404 [==============================] - 0s 94us/sample - loss: 6.5707 - mean_squared_error: 6.5707 - mean_absolute_error: 1.8108 - val_loss: 21.6761 - val_mean_squared_error: 21.6761 - val_mean_absolute_error: 2.9492\n",
       "Epoch 59/75\n",
-      "404/404 [==============================] - 0s 378us/sample - loss: 6.7839 - mse: 6.7839 - mae: 1.9027 - val_loss: 18.6853 - val_mse: 18.6853 - val_mae: 2.7709\n",
+      "404/404 [==============================] - 0s 89us/sample - loss: 6.4264 - mean_squared_error: 6.4264 - mean_absolute_error: 1.8380 - val_loss: 18.7502 - val_mean_squared_error: 18.7502 - val_mean_absolute_error: 2.7476\n",
       "Epoch 60/75\n",
-      "404/404 [==============================] - 0s 395us/sample - loss: 6.7178 - mse: 6.7178 - mae: 1.8871 - val_loss: 19.5394 - val_mse: 19.5394 - val_mae: 2.8101\n",
+      "404/404 [==============================] - 0s 84us/sample - loss: 6.2431 - mean_squared_error: 6.2431 - mean_absolute_error: 1.8098 - val_loss: 18.8827 - val_mean_squared_error: 18.8827 - val_mean_absolute_error: 2.6647\n",
       "Epoch 61/75\n",
-      "404/404 [==============================] - 0s 366us/sample - loss: 6.4152 - mse: 6.4152 - mae: 1.8175 - val_loss: 18.2377 - val_mse: 18.2377 - val_mae: 2.7450\n",
+      "404/404 [==============================] - 0s 87us/sample - loss: 6.1896 - mean_squared_error: 6.1896 - mean_absolute_error: 1.7740 - val_loss: 18.0238 - val_mean_squared_error: 18.0238 - val_mean_absolute_error: 2.6855\n",
       "Epoch 62/75\n",
-      "404/404 [==============================] - 0s 384us/sample - loss: 5.9727 - mse: 5.9727 - mae: 1.7630 - val_loss: 19.0252 - val_mse: 19.0252 - val_mae: 2.7960\n",
+      "404/404 [==============================] - 0s 94us/sample - loss: 6.3093 - mean_squared_error: 6.3093 - mean_absolute_error: 1.8134 - val_loss: 18.1979 - val_mean_squared_error: 18.1979 - val_mean_absolute_error: 2.7090\n",
       "Epoch 63/75\n",
-      "404/404 [==============================] - 0s 380us/sample - loss: 6.0973 - mse: 6.0973 - mae: 1.8071 - val_loss: 18.8069 - val_mse: 18.8069 - val_mae: 2.8894\n",
+      "404/404 [==============================] - 0s 92us/sample - loss: 6.0606 - mean_squared_error: 6.0606 - mean_absolute_error: 1.7585 - val_loss: 18.1167 - val_mean_squared_error: 18.1167 - val_mean_absolute_error: 2.6967\n",
       "Epoch 64/75\n",
-      "404/404 [==============================] - 0s 362us/sample - loss: 6.1074 - mse: 6.1074 - mae: 1.7978 - val_loss: 18.4702 - val_mse: 18.4702 - val_mae: 2.7851\n",
+      "404/404 [==============================] - 0s 89us/sample - loss: 5.8379 - mean_squared_error: 5.8379 - mean_absolute_error: 1.7330 - val_loss: 19.5164 - val_mean_squared_error: 19.5164 - val_mean_absolute_error: 2.8196\n",
       "Epoch 65/75\n",
-      "404/404 [==============================] - 0s 369us/sample - loss: 5.9329 - mse: 5.9329 - mae: 1.7545 - val_loss: 18.5321 - val_mse: 18.5321 - val_mae: 2.7933\n",
+      "404/404 [==============================] - 0s 94us/sample - loss: 5.9200 - mean_squared_error: 5.9200 - mean_absolute_error: 1.7828 - val_loss: 18.1699 - val_mean_squared_error: 18.1699 - val_mean_absolute_error: 2.7009\n",
       "Epoch 66/75\n",
-      "404/404 [==============================] - 0s 341us/sample - loss: 5.7473 - mse: 5.7473 - mae: 1.7211 - val_loss: 18.5536 - val_mse: 18.5536 - val_mae: 2.8010\n",
+      "404/404 [==============================] - 0s 97us/sample - loss: 5.8598 - mean_squared_error: 5.8598 - mean_absolute_error: 1.7497 - val_loss: 17.9799 - val_mean_squared_error: 17.9799 - val_mean_absolute_error: 2.7244\n",
       "Epoch 67/75\n",
-      "404/404 [==============================] - 0s 339us/sample - loss: 5.8866 - mse: 5.8866 - mae: 1.7224 - val_loss: 18.0067 - val_mse: 18.0067 - val_mae: 2.7054\n",
+      "404/404 [==============================] - 0s 92us/sample - loss: 5.7823 - mean_squared_error: 5.7823 - mean_absolute_error: 1.7157 - val_loss: 18.6773 - val_mean_squared_error: 18.6773 - val_mean_absolute_error: 2.7327\n",
       "Epoch 68/75\n",
-      "404/404 [==============================] - 0s 337us/sample - loss: 5.7885 - mse: 5.7885 - mae: 1.7391 - val_loss: 17.5502 - val_mse: 17.5502 - val_mae: 2.6767\n",
+      "404/404 [==============================] - 0s 94us/sample - loss: 5.9957 - mean_squared_error: 5.9957 - mean_absolute_error: 1.7861 - val_loss: 19.1469 - val_mean_squared_error: 19.1469 - val_mean_absolute_error: 2.8024\n",
       "Epoch 69/75\n",
-      "404/404 [==============================] - 0s 331us/sample - loss: 5.8809 - mse: 5.8809 - mae: 1.7542 - val_loss: 17.0280 - val_mse: 17.0280 - val_mae: 2.6404\n",
+      "404/404 [==============================] - 0s 89us/sample - loss: 5.6007 - mean_squared_error: 5.6007 - mean_absolute_error: 1.7125 - val_loss: 17.1233 - val_mean_squared_error: 17.1233 - val_mean_absolute_error: 2.5951\n",
       "Epoch 70/75\n",
-      "404/404 [==============================] - 0s 343us/sample - loss: 5.6028 - mse: 5.6028 - mae: 1.6972 - val_loss: 17.7188 - val_mse: 17.7188 - val_mae: 2.6979\n",
+      "404/404 [==============================] - 0s 89us/sample - loss: 5.9658 - mean_squared_error: 5.9658 - mean_absolute_error: 1.7844 - val_loss: 17.3344 - val_mean_squared_error: 17.3344 - val_mean_absolute_error: 2.6331\n",
       "Epoch 71/75\n",
-      "404/404 [==============================] - 0s 337us/sample - loss: 5.4361 - mse: 5.4361 - mae: 1.6741 - val_loss: 16.8852 - val_mse: 16.8852 - val_mae: 2.6126\n",
+      "404/404 [==============================] - 0s 94us/sample - loss: 5.9481 - mean_squared_error: 5.9481 - mean_absolute_error: 1.7387 - val_loss: 17.5450 - val_mean_squared_error: 17.5450 - val_mean_absolute_error: 2.6812\n",
       "Epoch 72/75\n",
-      "404/404 [==============================] - 0s 345us/sample - loss: 5.5608 - mse: 5.5608 - mae: 1.7252 - val_loss: 16.7483 - val_mse: 16.7483 - val_mae: 2.6063\n",
+      "404/404 [==============================] - 0s 94us/sample - loss: 5.8005 - mean_squared_error: 5.8005 - mean_absolute_error: 1.7568 - val_loss: 17.6524 - val_mean_squared_error: 17.6524 - val_mean_absolute_error: 2.6732\n",
       "Epoch 73/75\n",
-      "404/404 [==============================] - 0s 341us/sample - loss: 5.5022 - mse: 5.5022 - mae: 1.6912 - val_loss: 17.6786 - val_mse: 17.6786 - val_mae: 2.7316\n",
+      "404/404 [==============================] - 0s 94us/sample - loss: 5.5415 - mean_squared_error: 5.5415 - mean_absolute_error: 1.6871 - val_loss: 16.2998 - val_mean_squared_error: 16.2998 - val_mean_absolute_error: 2.5542\n",
       "Epoch 74/75\n",
-      "404/404 [==============================] - 0s 396us/sample - loss: 5.2794 - mse: 5.2794 - mae: 1.6478 - val_loss: 17.6115 - val_mse: 17.6115 - val_mae: 2.6773\n",
+      "404/404 [==============================] - 0s 94us/sample - loss: 5.6195 - mean_squared_error: 5.6195 - mean_absolute_error: 1.7366 - val_loss: 17.3200 - val_mean_squared_error: 17.3200 - val_mean_absolute_error: 2.6099\n",
       "Epoch 75/75\n",
-      "404/404 [==============================] - 0s 338us/sample - loss: 5.4796 - mse: 5.4796 - mae: 1.6876 - val_loss: 17.2835 - val_mse: 17.2835 - val_mae: 2.7126\n"
+      "404/404 [==============================] - 0s 92us/sample - loss: 5.4059 - mean_squared_error: 5.4059 - mean_absolute_error: 1.6942 - val_loss: 16.3826 - val_mean_squared_error: 16.3826 - val_mean_absolute_error: 2.6006\n"
      ]
     },
     {
      "data": {
       "text/plain": [
-       "<tensorflow.python.keras.callbacks.History at 0x7f36340c6b38>"
+       "<tensorflow.python.keras.callbacks.History at 0x1bb379f4d30>"
       ]
      },
-     "execution_count": 3,
+     "execution_count": 4,
      "metadata": {},
      "output_type": "execute_result"
     }
@@ -449,7 +462,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 4,
+   "execution_count": 5,
    "metadata": {
     "colab": {
      "base_uri": "https://localhost:8080/",
@@ -464,21 +477,24 @@
      "name": "stderr",
      "output_type": "stream",
      "text": [
-      "/usr/local/lib/python3.6/dist-packages/sklearn/model_selection/_split.py:1978: FutureWarning: The default value of cv will change from 3 to 5 in version 0.22. Specify it explicitly to silence this warning.\n",
-      "  warnings.warn(CV_WARNING, FutureWarning)\n"
+      "W0123 12:23:05.689539  2304 deprecation.py:323] From C:\\Users\\John\\Anaconda3\\envs\\U4-S2-NN\\lib\\site-packages\\tensorflow\\python\\ops\\nn_impl.py:180: add_dispatch_support.<locals>.wrapper (from tensorflow.python.ops.array_ops) is deprecated and will be removed in a future version.\n",
+      "Instructions for updating:\n",
+      "Use tf.where in 2.0, which has the same broadcast rule as np.where\n"
      ]
     },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Best: 0.65234375 using {'batch_size': 10, 'epochs': 20}\n",
-      "Means: 0.65234375, Stdev: 0.033298728782667764 with: {'batch_size': 10, 'epochs': 20}\n",
-      "Means: 0.6263020833333334, Stdev: 0.01813592223591682 with: {'batch_size': 20, 'epochs': 20}\n",
-      "Means: 0.6041666666666666, Stdev: 0.037782859709757574 with: {'batch_size': 40, 'epochs': 20}\n",
-      "Means: 0.5533854166666666, Stdev: 0.03210632293213009 with: {'batch_size': 60, 'epochs': 20}\n",
-      "Means: 0.61328125, Stdev: 0.024079742199097563 with: {'batch_size': 80, 'epochs': 20}\n",
-      "Means: 0.5611979166666666, Stdev: 0.038450060052691144 with: {'batch_size': 100, 'epochs': 20}\n"
+      "Best: 0.71875 using {'batch_size': 10, 'epochs': 200}\n",
+      "Means: 0.6848958333333334, Stdev: 0.016053161466065044 with: {'batch_size': 10, 'epochs': 20}\n",
+      "Means: 0.65234375, Stdev: 0.02834836075140266 with: {'batch_size': 10, 'epochs': 40}\n",
+      "Means: 0.6888020833333334, Stdev: 0.016366933710906945 with: {'batch_size': 10, 'epochs': 60}\n",
+      "Means: 0.71875, Stdev: 0.008438464451051902 with: {'batch_size': 10, 'epochs': 200}\n",
+      "Means: 0.6158854166666666, Stdev: 0.02946278254943948 with: {'batch_size': 20, 'epochs': 20}\n",
+      "Means: 0.59375, Stdev: 0.030757843257858637 with: {'batch_size': 20, 'epochs': 40}\n",
+      "Means: 0.671875, Stdev: 0.02834836075140266 with: {'batch_size': 20, 'epochs': 60}\n",
+      "Means: 0.703125, Stdev: 0.00637887953849786 with: {'batch_size': 20, 'epochs': 200}\n"
      ]
     }
    ],
@@ -521,8 +537,8 @@
     "# param_grid = dict(batch_size=batch_size, epochs=epochs)\n",
     "\n",
     "# define the grid search parameters\n",
-    "param_grid = {'batch_size': [10, 20, 40, 60, 80, 100],\n",
-    "              'epochs': [20]}\n",
+    "param_grid = {'batch_size': [10, 20], #, 40, 60, 80, 100\n",
+    "              'epochs': [20, 40, 60, 200]}\n",
     "\n",
     "# Create Grid Search\n",
     "grid = GridSearchCV(estimator=model, param_grid=param_grid, n_jobs=1)\n",
@@ -534,7 +550,7 @@
     "stds = grid_result.cv_results_['std_test_score']\n",
     "params = grid_result.cv_results_['params']\n",
     "for mean, stdev, param in zip(means, stds, params):\n",
-    "    print(f\"Means: {mean}, Stdev: {stdev} with: {param}\") "
+    "    print(f\"Means: {mean}, Stdev: {stdev} with: {param}\")"
    ]
   },
   {
@@ -551,7 +567,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 5,
+   "execution_count": 6,
    "metadata": {
     "colab": {
      "base_uri": "https://localhost:8080/",
@@ -566,18 +582,18 @@
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Best: 0.7044270833333334 using {'batch_size': 20, 'epochs': 200}\n",
-      "Means: 0.6666666666666666, Stdev: 0.028940248399600087 with: {'batch_size': 20, 'epochs': 20}\n",
-      "Means: 0.6588541666666666, Stdev: 0.028940248399600087 with: {'batch_size': 20, 'epochs': 40}\n",
-      "Means: 0.6848958333333334, Stdev: 0.03498705427745938 with: {'batch_size': 20, 'epochs': 60}\n",
-      "Means: 0.7044270833333334, Stdev: 0.018414239093399672 with: {'batch_size': 20, 'epochs': 200}\n"
+      "Best: 0.6927083333333334 using {'batch_size': 20, 'epochs': 200}\n",
+      "Means: 0.5755208333333334, Stdev: 0.03737682316251907 with: {'batch_size': 20, 'epochs': 20}\n",
+      "Means: 0.6627604166666666, Stdev: 0.02262779582940464 with: {'batch_size': 20, 'epochs': 40}\n",
+      "Means: 0.6770833333333334, Stdev: 0.03845006005269115 with: {'batch_size': 20, 'epochs': 60}\n",
+      "Means: 0.6927083333333334, Stdev: 0.019225030026345572 with: {'batch_size': 20, 'epochs': 200}\n"
      ]
     }
    ],
    "source": [
     "# define the grid search parameters\n",
     "param_grid = {'batch_size': [20],\n",
-    "              'epochs': [20, 40, 60,200]}\n",
+    "              'epochs': [20, 40, 60, 200]}\n",
     "\n",
     "# Create Grid Search\n",
     "grid = GridSearchCV(estimator=model, param_grid=param_grid, n_jobs=1)\n",
@@ -730,44 +746,18 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 6,
+   "execution_count": null,
    "metadata": {},
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://app.wandb.ai/lambda-ds7/boston\" target=\"_blank\">https://app.wandb.ai/lambda-ds7/boston</a><br/>\n",
-       "                Run page: <a href=\"https://app.wandb.ai/lambda-ds7/boston/runs/whw09rro\" target=\"_blank\">https://app.wandb.ai/lambda-ds7/boston/runs/whw09rro</a><br/>\n",
-       "            "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "data": {
-      "text/plain": [
-       "W&B Run: https://app.wandb.ai/lambda-ds7/boston/runs/whw09rro"
-      ]
-     },
-     "execution_count": 6,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
    "source": [
     "import wandb\n",
-    "from wandb.keras import WandbCallback"
+    "from wandb.keras import WandbCallback\n",
+    "wandb.init(project=\"ds9-boston\", entity=\"ds8\")"
    ]
   },
   {
    "cell_type": "code",
-   "execution_count": 8,
+   "execution_count": null,
    "metadata": {
     "colab": {
      "base_uri": "https://localhost:8080/",
@@ -777,166 +767,58 @@
     "id": "GMXVfmzXp1Oo",
     "outputId": "b05e251e-508f-46e6-865b-f869ae2a5dc4"
    },
-   "outputs": [
-    {
-     "data": {
-      "text/html": [
-       "\n",
-       "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://app.wandb.ai/lambda-ds7/boston\" target=\"_blank\">https://app.wandb.ai/lambda-ds7/boston</a><br/>\n",
-       "                Run page: <a href=\"https://app.wandb.ai/lambda-ds7/boston/runs/kkgdtc31\" target=\"_blank\">https://app.wandb.ai/lambda-ds7/boston/runs/kkgdtc31</a><br/>\n",
-       "            "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
-    },
-    {
-     "name": "stdout",
-     "output_type": "stream",
-     "text": [
-      "Train on 270 samples, validate on 134 samples\n",
-      "Epoch 1/50\n",
-      "270/270 [==============================] - 1s 3ms/sample - loss: 492.3539 - mse: 492.3539 - mae: 20.3197 - val_loss: 481.5445 - val_mse: 481.5445 - val_mae: 19.6138\n",
-      "Epoch 2/50\n",
-      "270/270 [==============================] - 0s 591us/sample - loss: 239.4999 - mse: 239.4999 - mae: 12.8064 - val_loss: 113.8561 - val_mse: 113.8561 - val_mae: 8.2962\n",
-      "Epoch 3/50\n",
-      "270/270 [==============================] - 0s 618us/sample - loss: 56.2921 - mse: 56.2921 - mae: 5.8988 - val_loss: 62.7912 - val_mse: 62.7912 - val_mae: 5.6465\n",
-      "Epoch 4/50\n",
-      "270/270 [==============================] - 0s 613us/sample - loss: 29.4994 - mse: 29.4994 - mae: 3.9653 - val_loss: 37.9256 - val_mse: 37.9256 - val_mae: 4.1730\n",
-      "Epoch 5/50\n",
-      "270/270 [==============================] - 0s 608us/sample - loss: 20.6919 - mse: 20.6919 - mae: 3.3022 - val_loss: 31.7489 - val_mse: 31.7489 - val_mae: 3.7113\n",
-      "Epoch 6/50\n",
-      "270/270 [==============================] - 0s 602us/sample - loss: 17.2701 - mse: 17.2701 - mae: 3.0291 - val_loss: 27.3921 - val_mse: 27.3921 - val_mae: 3.4958\n",
-      "Epoch 7/50\n",
-      "270/270 [==============================] - 0s 671us/sample - loss: 15.5172 - mse: 15.5172 - mae: 2.8537 - val_loss: 25.3208 - val_mse: 25.3208 - val_mae: 3.3650\n",
-      "Epoch 8/50\n",
-      "270/270 [==============================] - 0s 661us/sample - loss: 13.7548 - mse: 13.7548 - mae: 2.7089 - val_loss: 23.8920 - val_mse: 23.8920 - val_mae: 3.2746\n",
-      "Epoch 9/50\n",
-      "270/270 [==============================] - 0s 606us/sample - loss: 12.3745 - mse: 12.3745 - mae: 2.5662 - val_loss: 22.1294 - val_mse: 22.1294 - val_mae: 3.1509\n",
-      "Epoch 10/50\n",
-      "270/270 [==============================] - 0s 614us/sample - loss: 11.2424 - mse: 11.2424 - mae: 2.4804 - val_loss: 20.5718 - val_mse: 20.5718 - val_mae: 3.0461\n",
-      "Epoch 11/50\n",
-      "270/270 [==============================] - 0s 605us/sample - loss: 10.6098 - mse: 10.6098 - mae: 2.4178 - val_loss: 20.3467 - val_mse: 20.3467 - val_mae: 3.0251\n",
-      "Epoch 12/50\n",
-      "270/270 [==============================] - 0s 576us/sample - loss: 10.0011 - mse: 10.0011 - mae: 2.3257 - val_loss: 18.4283 - val_mse: 18.4283 - val_mae: 2.8938\n",
-      "Epoch 13/50\n",
-      "270/270 [==============================] - 0s 666us/sample - loss: 9.1287 - mse: 9.1287 - mae: 2.2384 - val_loss: 18.2024 - val_mse: 18.2024 - val_mae: 2.9116\n",
-      "Epoch 14/50\n",
-      "270/270 [==============================] - 0s 603us/sample - loss: 8.6211 - mse: 8.6211 - mae: 2.1980 - val_loss: 17.4749 - val_mse: 17.4749 - val_mae: 2.8290\n",
-      "Epoch 15/50\n",
-      "270/270 [==============================] - 0s 463us/sample - loss: 8.4558 - mse: 8.4558 - mae: 2.2087 - val_loss: 17.7878 - val_mse: 17.7878 - val_mae: 2.8516\n",
-      "Epoch 16/50\n",
-      "270/270 [==============================] - 0s 626us/sample - loss: 8.3626 - mse: 8.3626 - mae: 2.2031 - val_loss: 16.7101 - val_mse: 16.7101 - val_mae: 2.7820\n",
-      "Epoch 17/50\n",
-      "270/270 [==============================] - 0s 607us/sample - loss: 7.9180 - mse: 7.9180 - mae: 2.1265 - val_loss: 16.6064 - val_mse: 16.6064 - val_mae: 2.7419\n",
-      "Epoch 18/50\n",
-      "270/270 [==============================] - 0s 479us/sample - loss: 7.5552 - mse: 7.5552 - mae: 2.0235 - val_loss: 17.2872 - val_mse: 17.2872 - val_mae: 2.8539\n",
-      "Epoch 19/50\n",
-      "270/270 [==============================] - 0s 616us/sample - loss: 7.0971 - mse: 7.0971 - mae: 2.0038 - val_loss: 16.5110 - val_mse: 16.5110 - val_mae: 2.8042\n",
-      "Epoch 20/50\n",
-      "270/270 [==============================] - 0s 606us/sample - loss: 6.7068 - mse: 6.7068 - mae: 1.9539 - val_loss: 15.5886 - val_mse: 15.5886 - val_mae: 2.7048\n",
-      "Epoch 21/50\n",
-      "270/270 [==============================] - 0s 461us/sample - loss: 6.8542 - mse: 6.8542 - mae: 1.9979 - val_loss: 17.2378 - val_mse: 17.2378 - val_mae: 2.8853\n",
-      "Epoch 22/50\n",
-      "270/270 [==============================] - 0s 474us/sample - loss: 6.5719 - mse: 6.5719 - mae: 1.9312 - val_loss: 16.3043 - val_mse: 16.3043 - val_mae: 2.7756\n",
-      "Epoch 23/50\n",
-      "270/270 [==============================] - 0s 478us/sample - loss: 6.6161 - mse: 6.6161 - mae: 1.9572 - val_loss: 15.7992 - val_mse: 15.7992 - val_mae: 2.7219\n",
-      "Epoch 24/50\n",
-      "270/270 [==============================] - 0s 491us/sample - loss: 7.1269 - mse: 7.1269 - mae: 2.0137 - val_loss: 16.5402 - val_mse: 16.5402 - val_mae: 2.8005\n",
-      "Epoch 25/50\n",
-      "270/270 [==============================] - 0s 479us/sample - loss: 6.3382 - mse: 6.3382 - mae: 1.8540 - val_loss: 16.5034 - val_mse: 16.5034 - val_mae: 2.7864\n",
-      "Epoch 26/50\n",
-      "270/270 [==============================] - 0s 488us/sample - loss: 5.9442 - mse: 5.9442 - mae: 1.8251 - val_loss: 15.6558 - val_mse: 15.6558 - val_mae: 2.7102\n",
-      "Epoch 27/50\n",
-      "270/270 [==============================] - 0s 604us/sample - loss: 5.5832 - mse: 5.5832 - mae: 1.7432 - val_loss: 15.3021 - val_mse: 15.3021 - val_mae: 2.6862\n",
-      "Epoch 28/50\n",
-      "270/270 [==============================] - 0s 436us/sample - loss: 5.4530 - mse: 5.4530 - mae: 1.7354 - val_loss: 15.4570 - val_mse: 15.4570 - val_mae: 2.6846\n",
-      "Epoch 29/50\n",
-      "270/270 [==============================] - 0s 441us/sample - loss: 5.3070 - mse: 5.3070 - mae: 1.7079 - val_loss: 15.8510 - val_mse: 15.8510 - val_mae: 2.7644\n",
-      "Epoch 30/50\n",
-      "270/270 [==============================] - 0s 477us/sample - loss: 5.4157 - mse: 5.4157 - mae: 1.7321 - val_loss: 15.9160 - val_mse: 15.9160 - val_mae: 2.7134\n",
-      "Epoch 31/50\n",
-      "270/270 [==============================] - 0s 452us/sample - loss: 5.2639 - mse: 5.2639 - mae: 1.6981 - val_loss: 15.3554 - val_mse: 15.3554 - val_mae: 2.6662\n",
-      "Epoch 32/50\n",
-      "270/270 [==============================] - 0s 475us/sample - loss: 5.7687 - mse: 5.7687 - mae: 1.8045 - val_loss: 15.7151 - val_mse: 15.7151 - val_mae: 2.6867\n",
-      "Epoch 33/50\n",
-      "270/270 [==============================] - 0s 462us/sample - loss: 5.5210 - mse: 5.5210 - mae: 1.7367 - val_loss: 15.4227 - val_mse: 15.4227 - val_mae: 2.6561\n",
-      "Epoch 34/50\n",
-      "270/270 [==============================] - 0s 474us/sample - loss: 5.5663 - mse: 5.5663 - mae: 1.7294 - val_loss: 15.3376 - val_mse: 15.3376 - val_mae: 2.6991\n",
-      "Epoch 35/50\n",
-      "270/270 [==============================] - 0s 626us/sample - loss: 5.0063 - mse: 5.0063 - mae: 1.6196 - val_loss: 15.2642 - val_mse: 15.2642 - val_mae: 2.6796\n",
-      "Epoch 36/50\n",
-      "270/270 [==============================] - 0s 459us/sample - loss: 4.7251 - mse: 4.7251 - mae: 1.5727 - val_loss: 15.4858 - val_mse: 15.4858 - val_mae: 2.7288\n",
-      "Epoch 37/50\n",
-      "270/270 [==============================] - 0s 604us/sample - loss: 4.6394 - mse: 4.6394 - mae: 1.5854 - val_loss: 15.1139 - val_mse: 15.1139 - val_mae: 2.6305\n",
-      "Epoch 38/50\n",
-      "270/270 [==============================] - 0s 592us/sample - loss: 4.5669 - mse: 4.5669 - mae: 1.5548 - val_loss: 14.9898 - val_mse: 14.9898 - val_mae: 2.6340\n",
-      "Epoch 39/50\n",
-      "270/270 [==============================] - 0s 458us/sample - loss: 4.4480 - mse: 4.4480 - mae: 1.5334 - val_loss: 15.6389 - val_mse: 15.6389 - val_mae: 2.7337\n",
-      "Epoch 40/50\n",
-      "270/270 [==============================] - 0s 455us/sample - loss: 4.4119 - mse: 4.4119 - mae: 1.5426 - val_loss: 15.0723 - val_mse: 15.0723 - val_mae: 2.6709\n",
-      "Epoch 41/50\n",
-      "270/270 [==============================] - 0s 473us/sample - loss: 4.0797 - mse: 4.0797 - mae: 1.4725 - val_loss: 15.4706 - val_mse: 15.4706 - val_mae: 2.6707\n",
-      "Epoch 42/50\n",
-      "270/270 [==============================] - 0s 449us/sample - loss: 4.0619 - mse: 4.0619 - mae: 1.4692 - val_loss: 15.2423 - val_mse: 15.2423 - val_mae: 2.6165\n",
-      "Epoch 43/50\n",
-      "270/270 [==============================] - 0s 465us/sample - loss: 4.1861 - mse: 4.1861 - mae: 1.5076 - val_loss: 15.7510 - val_mse: 15.7510 - val_mae: 2.7279\n",
-      "Epoch 44/50\n",
-      "270/270 [==============================] - 0s 462us/sample - loss: 4.1128 - mse: 4.1128 - mae: 1.4810 - val_loss: 15.4814 - val_mse: 15.4814 - val_mae: 2.6562\n",
-      "Epoch 45/50\n",
-      "270/270 [==============================] - 0s 441us/sample - loss: 4.2171 - mse: 4.2171 - mae: 1.5205 - val_loss: 16.3839 - val_mse: 16.3839 - val_mae: 2.8194\n",
-      "Epoch 46/50\n",
-      "270/270 [==============================] - 0s 422us/sample - loss: 4.2609 - mse: 4.2609 - mae: 1.5548 - val_loss: 15.3587 - val_mse: 15.3587 - val_mae: 2.7161\n",
-      "Epoch 47/50\n",
-      "270/270 [==============================] - 0s 454us/sample - loss: 4.4635 - mse: 4.4635 - mae: 1.5440 - val_loss: 15.7736 - val_mse: 15.7736 - val_mae: 2.7184\n",
-      "Epoch 48/50\n",
-      "270/270 [==============================] - 0s 426us/sample - loss: 3.7406 - mse: 3.7406 - mae: 1.4147 - val_loss: 15.6718 - val_mse: 15.6718 - val_mae: 2.7468\n",
-      "Epoch 49/50\n",
-      "270/270 [==============================] - 0s 445us/sample - loss: 3.6173 - mse: 3.6173 - mae: 1.3816 - val_loss: 15.7291 - val_mse: 15.7291 - val_mae: 2.7789\n",
-      "Epoch 50/50\n",
-      "270/270 [==============================] - 0s 430us/sample - loss: 3.6303 - mse: 3.6303 - mae: 1.4266 - val_loss: 15.4937 - val_mse: 15.4937 - val_mae: 2.7390\n"
-     ]
-    },
-    {
-     "data": {
-      "text/plain": [
-       "<tensorflow.python.keras.callbacks.History at 0x7f315c319be0>"
-      ]
-     },
-     "execution_count": 8,
-     "metadata": {},
-     "output_type": "execute_result"
-    }
-   ],
+   "outputs": [],
+   "source": [
+    "# wandb.init(project=\"boston\", entity=\"lambda-ds7\") #Initializes and Experiment\n",
+    "\n",
+    "# # Important Hyperparameters\n",
+    "# X =  x_train\n",
+    "# y =  y_train\n",
+    "\n",
+    "# inputs = X.shape[1]\n",
+    "# wandb.config.epochs = 50\n",
+    "# wandb.config.batch_size = 10\n",
+    "\n",
+    "# # Create Model\n",
+    "# model = Sequential()\n",
+    "# model.add(Dense(64, activation='relu', input_shape=(inputs,)))\n",
+    "# model.add(Dense(64, activation='relu'))\n",
+    "# model.add(Dense(64, activation='relu'))\n",
+    "# model.add(Dense(1))\n",
+    "# # Compile Model\n",
+    "# model.compile(optimizer='adam', loss='mse', metrics=['mse', 'mae'])\n",
+    "\n",
+    "# # Fit Model\n",
+    "# model.fit(X, y, \n",
+    "#           validation_split=0.33, \n",
+    "#           epochs=wandb.config.epochs, \n",
+    "#           batch_size=wandb.config.batch_size, \n",
+    "#           callbacks=[WandbCallback()]\n",
+    "#          )"
+   ]
+  },
+  {
+   "cell_type": "code",
+   "execution_count": null,
+   "metadata": {},
+   "outputs": [],
    "source": [
-    "wandb.init(project=\"boston\", entity=\"lambda-ds7\") #Initializes and Experiment\n",
-    "\n",
     "# Important Hyperparameters\n",
-    "X =  x_train\n",
-    "y =  y_train\n",
-    "\n",
-    "inputs = X.shape[1]\n",
+    "inputs = x_train.shape[1]\n",
     "wandb.config.epochs = 50\n",
     "wandb.config.batch_size = 10\n",
-    "\n",
     "# Create Model\n",
     "model = Sequential()\n",
     "model.add(Dense(64, activation='relu', input_shape=(inputs,)))\n",
     "model.add(Dense(64, activation='relu'))\n",
-    "model.add(Dense(64, activation='relu'))\n",
     "model.add(Dense(1))\n",
     "# Compile Model\n",
-    "model.compile(optimizer='adam', loss='mse', metrics=['mse', 'mae'])\n",
-    "\n",
+    "model.compile(optimizer='adam', loss='mse', metrics=['mse'])\n",
     "# Fit Model\n",
-    "model.fit(X, y, \n",
+    "model.fit(x_train, y_train, \n",
     "          validation_split=0.33, \n",
     "          epochs=wandb.config.epochs, \n",
-    "          batch_size=wandb.config.batch_size, \n",
+    "          batch_size=wandb.config.epochs, \n",
     "          callbacks=[WandbCallback()]\n",
     "         )"
    ]
@@ -995,15 +877,15 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 13,
+   "execution_count": 10,
    "metadata": {},
    "outputs": [
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "Create sweep with ID: huau0u9r\n",
-      "Sweep URL: https://app.wandb.ai/lambda-ds7/boston/sweeps/huau0u9r\n"
+      "Create sweep with ID: 7hjfjy1p\n",
+      "Sweep URL: https://app.wandb.ai/lambda-ds7/boston/sweeps/7hjfjy1p\n"
      ]
     }
    ],
@@ -1013,7 +895,7 @@
   },
   {
    "cell_type": "code",
-   "execution_count": 11,
+   "execution_count": null,
    "metadata": {},
    "outputs": [],
    "source": [
@@ -1022,6 +904,8 @@
     "#Initializes and Experiment\n",
     "\n",
     "from tensorflow.keras.optimizers import Adam\n",
+    "from tensorflow.keras.layers import Dropout\n",
+    "from tensorflow.keras import regularizers\n",
     "\n",
     "# Important Hyperparameters\n",
     "X =  x_train\n",
@@ -1046,7 +930,7 @@
     "    adam = Adam(learning_rate=config.learning_rate)\n",
     "\n",
     "    # Compile Model\n",
-    "    model.compile(optimizer=adam, loss='mse', metrics=['mse', 'mae'])\n",
+    "    model.compile(optimizer=sgd, loss='mse', metrics=['mse', 'mae'])\n",
     "\n",
     "    # Fit Model\n",
     "    model.fit(X, y, \n",
@@ -1062,32 +946,313 @@
    "execution_count": null,
    "metadata": {},
    "outputs": [
+    {
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "I0123 12:26:08.315708  2304 wandb_agent.py:180] Running runs: []\n",
+      "I0123 12:26:08.554844  2304 wandb_agent.py:242] Agent received command: run\n",
+      "I0123 12:26:08.556816  2304 wandb_agent.py:272] Agent starting run with config:\n",
+      "\tbatch_size: 130.13268455850613\n",
+      "\tepochs: 464.94285318147007\n",
+      "\tlearning_rate: 0.7067920257863666\n",
+      "E0123 12:26:08.601807  2304 jupyter.py:96] Failed to query for notebook name, you can set it manually with the WANDB_NOTEBOOK_NAME environment variable\n"
+     ]
+    },
     {
      "name": "stdout",
      "output_type": "stream",
      "text": [
-      "wandb: Agent Starting Run: 2g77kp6k with config:\n",
-      "\tbatch_size: 308.503347845309\n",
-      "\tepochs: 704.9395850579006\n",
-      "\tlearning_rate: 1.480005523005428\n",
-      "wandb: Agent Started Run: 2g77kp6k\n"
+      "wandb: Agent Starting Run: dx7nhni0 with config:\n",
+      "\tbatch_size: 130.13268455850613\n",
+      "\tepochs: 464.94285318147007\n",
+      "\tlearning_rate: 0.7067920257863666\n"
      ]
     },
     {
-     "data": {
-      "text/html": [
-       "\n",
-       "                Logging results to <a href=\"https://wandb.com\" target=\"_blank\">Weights & Biases</a> <a href=\"https://docs.wandb.com/integrations/jupyter.html\" target=\"_blank\">(Documentation)</a>.<br/>\n",
-       "                Project page: <a href=\"https://app.wandb.ai/lambda-ds7/boston\" target=\"_blank\">https://app.wandb.ai/lambda-ds7/boston</a><br/>\n",
-       "                Run page: <a href=\"https://app.wandb.ai/lambda-ds7/boston/runs/t4w9l4ye\" target=\"_blank\">https://app.wandb.ai/lambda-ds7/boston/runs/t4w9l4ye</a><br/>\n",
-       "            "
-      ],
-      "text/plain": [
-       "<IPython.core.display.HTML object>"
-      ]
-     },
-     "metadata": {},
-     "output_type": "display_data"
+     "name": "stderr",
+     "output_type": "stream",
+     "text": [
+      "I0123 12:26:14.733671  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:26:19.969360  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:26:25.178481  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:26:30.675903  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:26:35.881439  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:26:41.086449  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:26:46.282953  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:26:51.494308  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:26:56.696661  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:27:01.893034  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:27:07.074388  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:27:12.310023  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:27:17.591408  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:27:22.782016  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:27:27.995837  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:27:33.246301  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:27:38.462051  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:27:43.634288  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:27:49.109687  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:27:54.296498  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:27:59.536252  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:28:04.756293  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:28:09.959632  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:28:15.173569  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:28:20.391414  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:28:25.816449  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:28:31.050342  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:28:36.250260  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:28:41.477091  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:28:46.701283  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:28:51.905188  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:28:57.123536  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:29:02.371098  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:29:07.756028  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:29:12.955802  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:29:18.162660  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:29:23.484402  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:29:28.686735  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:29:33.878365  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:29:39.080354  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:29:44.302381  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:29:50.025410  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:29:55.212227  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:30:00.677481  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:30:05.872496  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:30:11.205062  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:30:16.407217  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:30:21.593076  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:30:26.790087  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:30:32.052361  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:30:37.602015  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:30:42.814087  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:30:48.017431  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:30:53.233423  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:30:58.468584  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:31:03.828395  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:31:09.017530  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:31:14.226963  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:31:19.456087  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:31:24.644179  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:31:30.167170  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:31:35.378219  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:31:40.567578  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:31:45.780031  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:31:50.992007  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:31:56.188232  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:32:01.399443  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:32:06.610398  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:32:11.828212  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:32:17.055401  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:32:22.267141  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:32:27.510171  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:32:32.723339  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:32:37.929487  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:32:43.117365  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:32:48.330281  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:32:53.546885  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:32:58.777285  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:33:03.967541  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:33:09.173509  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:33:14.373350  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:33:19.579455  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:33:24.776435  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:33:30.126762  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:33:35.334794  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:33:40.531269  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:33:45.824302  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:33:51.031328  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:33:56.492349  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:34:01.707853  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:34:06.895992  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:34:12.184712  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:34:17.400841  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:34:22.593366  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:34:27.787259  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:34:32.978394  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:34:38.539961  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:34:43.738028  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:34:48.913985  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:34:54.122538  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:34:59.348994  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:35:04.559060  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:35:09.754809  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:35:14.968667  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:35:20.381649  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:35:25.573090  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:35:30.760396  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:35:36.112567  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:35:41.323572  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:35:46.680233  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:35:51.871723  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:35:57.067146  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:36:02.297408  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:36:07.528924  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:36:12.763298  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:36:17.954610  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:36:23.148407  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:36:28.342433  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:36:33.555071  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:36:38.750357  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:36:44.186404  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:36:49.376330  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:36:54.574689  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:36:59.777335  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:37:04.972528  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:37:10.171235  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:37:15.635512  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:37:20.842647  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:37:26.197134  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:37:31.400105  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:37:36.590302  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:37:41.801393  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:37:47.015390  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:37:52.209208  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:37:57.409530  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:38:02.575662  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:38:07.762313  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:38:13.297830  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:38:18.522068  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:38:23.725421  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:38:28.898011  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:38:34.105566  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:38:39.319157  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:38:44.527031  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:38:49.715462  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:38:54.925355  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:39:00.137529  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:39:05.322412  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:39:10.535625  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:39:15.742469  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:39:20.965091  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:39:26.167879  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:39:31.365309  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:39:36.552835  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:39:41.738229  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:39:46.930038  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:39:52.135402  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:39:57.334584  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:40:02.546442  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:40:07.737616  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:40:12.990141  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:40:18.184808  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:40:23.386208  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:40:28.575447  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:40:33.779415  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:40:39.257987  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:40:44.470533  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:40:49.658177  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:40:54.897353  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:41:00.096499  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:41:05.281920  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:41:10.468264  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:41:15.651542  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:41:20.834397  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:41:26.032059  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:41:31.236768  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:41:36.447306  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:41:41.628598  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:41:46.829191  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:41:52.030683  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:41:57.299679  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:42:02.498534  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:42:07.682950  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:42:12.902773  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:42:18.140711  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:42:23.353044  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:42:28.560775  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:42:33.756305  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:42:38.954818  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:42:44.172343  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:42:49.389860  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:42:54.582803  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:42:59.790653  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:43:04.973693  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:43:10.151044  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:43:15.660874  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:43:20.879339  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:43:26.309483  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:43:31.508638  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:43:37.134063  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:43:42.334475  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:43:47.532892  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:43:52.731430  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:43:57.930275  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:44:03.123309  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:44:08.311740  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:44:13.532583  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:44:18.738608  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:44:23.943022  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:44:29.151165  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:44:34.361784  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:44:39.570479  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:44:44.786432  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:44:49.993285  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:44:55.217665  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:45:00.444914  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:45:05.624238  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:45:10.831397  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:45:16.029627  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:45:21.243697  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:45:26.450521  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:45:31.733017  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:45:36.919389  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:45:42.191716  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:45:47.533041  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:45:52.697355  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:45:57.900758  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:46:03.107755  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:46:08.324669  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:46:13.525669  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:46:18.714726  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:46:23.891522  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:46:29.070835  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:46:34.307511  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:46:39.511959  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:46:44.700219  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:46:49.899619  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:46:55.123795  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:47:00.321491  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:47:05.566516  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:47:10.760461  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:47:15.997209  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:47:21.230911  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:47:26.438430  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:47:32.285951  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:47:37.750581  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:47:42.944933  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:47:48.143273  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:47:53.383205  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:47:58.587857  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:48:03.827094  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:48:09.027646  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:48:14.308276  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:48:19.629863  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:48:24.841711  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:48:30.039333  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:48:35.233201  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:48:40.422529  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:48:45.605909  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:48:50.814679  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:48:56.016991  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:49:01.182790  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:49:06.386865  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:49:11.572557  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:49:16.755707  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:49:22.066850  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:49:27.263997  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:49:32.452629  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:49:37.714307  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:49:42.917788  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:49:48.130716  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:49:53.334359  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:49:58.540339  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:50:03.708531  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:50:08.925912  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:50:14.123932  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:50:19.324641  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:50:24.520276  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n",
+      "I0123 12:50:29.683668  2304 wandb_agent.py:180] Running runs: ['dx7nhni0']\n"
+     ]
     }
    ],
    "source": [
@@ -1153,9 +1318,9 @@
  ],
  "metadata": {
   "kernelspec": {
-   "display_name": "conda_tensorflow_p36",
+   "display_name": "U4-S2-NN (Python3)",
    "language": "python",
-   "name": "conda_tensorflow_p36"
+   "name": "u4-s2-nn"
   },
   "language_info": {
    "codemirror_mode": {
@@ -1167,7 +1332,7 @@
    "name": "python",
    "nbconvert_exporter": "python",
    "pygments_lexer": "ipython3",
-   "version": "3.6.5"
+   "version": "3.7.0"
   }
  },
  "nbformat": 4,
